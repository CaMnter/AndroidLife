/*
 * Copyright (C) 2015 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//apply plugin: 'java'
apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

File androidJar = file('platform/prebuilts/sdk/23/android.jar');
if (!androidJar.exists()) {
    File jar = file(System.env.ANDROID_HOME + '/platforms/android-23/android.jar');
    if (jar.exists()) {
        androidJar = jar
    } else {
        throw new RuntimeException("android-23 android.jar not found at " + androidJar.absolutePath)
    }
}

repositories {
    maven { url System.env.ANDROID_HOME + '/extras/android/m2repository/' }
}

configurations {
    provided
}

dependencies {
    api project(':instant-run:instant-run-runtime')
    testApi files(androidJar)
}

sourceSets {
    main { compileClasspath += configurations.provided }
}

//jar {
//    from {
//        configurations.compile.collect { it.isFile() ? zipTree(it) : it }
//    }
//    exclude('com/android/annotations/**', 'NOTICE')
//}

// set proper classpath and turn off strict mode.
tasks.withType(Javadoc) {
    classpath += files(androidJar)
}
